name: Build API Docker Image

description: 'Builds a docker image for the API'

inputs:
  tag:
    description: 'The tag to use for the image'
    required: false
  push:
    description: 'Push the image to the registry'
    required: false
    default: 'false'
  gh_password:
    description: 'The password to use for logging into ghcr.io'
    required: false

outputs:
  image:
    description: 'The image that was built'
    value: ${{ steps.build-image.outputs.IMAGE }}

runs:
  using: composite
  steps:
    - name: ‚õèÔ∏è build api
      shell: bash
      run: pnpm build:api

    - name: üö¢ Setup Depot
      uses: depot/setup-action@v1
      with:
        oidc: true

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      shell: bash
      env:
        REGISTRY_OWNER: novuhq
        DOCKER_NAME: novu/api
        IMAGE_TAG: ${{ github.sha }}
        DEPOT_PROJECT_ID: 6sj0jfv0n7
      run: |
        cd apps/api && pnpm --silent --workspace-root pnpm-context -- apps/api/Dockerfile | depot build --build-arg PACKAGE_PATH=apps/api - -t novu-api --load
        docker tag novu-api ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG
        
        docker run --network=host --name api -dit --env NODE_ENV=test ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG
        docker run --network=host appropriate/curl --retry 10 --retry-delay 5 --retry-connrefused http://localhost:1337/v1/health-check | grep 'ok'
        
        echo "::set-output name=IMAGE::ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG"

    - name: Optionally tag docker image
      if: ${{ inputs.tag }}
      shell: bash
      run: |
        docker tag ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:${{ inputs.tag }}

    - name: Login To Registry
      if: ${{ inputs.push == 'true' }}
      shell: bash
      env:
        GH_ACTOR: ${{ github.actor }}
        GH_PASSWORD: ${{ inputs.gh_password }}
      run: |
        if [ -z "$GH_PASSWORD" ]; then
          echo "No GH_PASSWORD provided"
          exit 1
        fi
        echo $GH_PASSWORD | docker login ghcr.io -u $GH_ACTOR --password-stdin

    - name: Push Base Image
      if: ${{ inputs.push == 'true' }}
      shell: bash
      run: |
        docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:$IMAGE_TAG
        docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:${{ inputs.tag }}

    - name: Push Base Image
      if: ${{ inputs.push == 'true' && inputs.tag }}
      shell: bash
      run: |
        docker push ghcr.io/$REGISTRY_OWNER/$DOCKER_NAME:${{ inputs.tag }}





